{"version":3,"sources":["..\\src\\plugins\\bounds.js","..\\src\\plugins\\bounds\\taskBounds.directive.js"],"names":[],"mappings":"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","file":"angular-gantt-bounds-plugin.js","sourcesContent":["\nangular.module('gantt.bounds', ['gantt', 'gantt.bounds.templates']).directive('ganttBounds', ['$compile', '$timeout', function($compile, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        require: '^gantt',\r\n        link: function(scope, element, attrs, ganttCtrl) {\r\n            var api = ganttCtrl.gantt.api;\r\n\r\n            api.directives.on.new(scope, function(directiveName, taskScope, taskElement) {\r\n                if (directiveName === 'ganttTask') {\r\n                    $timeout(function() {\r\n                        // TODO: Don't really understand why it fails without $timeout wrapping ...\r\n                        taskElement.append($compile('<gantt-task-bounds ng-model=\"task\"></gantt-bounds>')(taskScope));\r\n                    });\r\n\r\n                }\r\n            });\r\n        }\r\n    };\r\n}]);\r\n","\ngantt.directive('ganttTaskBounds', [function() {\r\n    // Displays a box representing the earliest allowable start time and latest completion time for a job\r\n\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: function(tElement, tAttrs) {\r\n            if (tAttrs.templateUrl === undefined) {\r\n                return 'plugins/bounds/default.taskBounds.tmpl.html';\r\n            } else {\r\n                return tAttrs.templateUrl;\r\n            }\r\n        },\r\n        replace: true,\r\n        scope: true,\r\n        controller: ['$scope', '$element', function($scope, $element) {\r\n            var css = {};\r\n\r\n            $scope.$watchGroup(['task.est', 'task.lct'], function() {\r\n                if ($scope.task.est !== undefined && $scope.task.lct !== undefined) {\r\n                    $scope.bounds = {};\r\n                    $scope.bounds.left = $scope.task.rowsManager.gantt.getPositionByDate($scope.task.est);\r\n                    $scope.bounds.width = $scope.task.rowsManager.gantt.getPositionByDate($scope.task.lct) - $scope.bounds.left;\r\n                } else {\r\n                    $scope.bounds = undefined;\r\n                }\r\n            });\r\n\r\n            $scope.task.$element.bind('mouseenter', function() {\r\n                $scope.$apply(function() {\r\n                    $scope.isTaskMouseOver = true;\r\n                });\r\n            });\r\n\r\n            $scope.task.$element.bind('mouseleave', function() {\r\n                $scope.$apply(function() {\r\n                    $scope.isTaskMouseOver = false;\r\n                });\r\n            });\r\n\r\n            $scope.getCss = function() {\r\n                if ($scope.bounds !== undefined) {\r\n                    css.width = $scope.bounds.width + 'px';\r\n\r\n                    if ($scope.task.isMilestone === true || $scope.task.width === 0) {\r\n                        css.left = ($scope.bounds.left - ($scope.task.left - 0.3)) + 'px';\r\n                    } else {\r\n                        css.left = ($scope.bounds.left - $scope.task.left) + 'px';\r\n                    }\r\n                }\r\n\r\n                return css;\r\n            };\r\n\r\n            $scope.getClass = function() {\r\n                if ($scope.task.est === undefined || $scope.task.lct === undefined) {\r\n                    return 'gantt-task-bounds-in';\r\n                } else if ($scope.task.est > $scope.task.from) {\r\n                    return 'gantt-task-bounds-out';\r\n                }\r\n                else if ($scope.task.lct < $scope.task.to) {\r\n                    return 'gantt-task-bounds-out';\r\n                }\r\n                else {\r\n                    return 'gantt-task-bounds-in';\r\n                }\r\n            };\r\n\r\n            $scope.task.rowsManager.gantt.api.directives.raise.new('ganttBounds', $scope, $element);\r\n            $scope.$on('$destroy', function() {\r\n                $scope.task.rowsManager.gantt.api.directives.raise.destroy('ganttBounds', $scope, $element);\r\n            });\r\n        }]\r\n    };\r\n}]);\r\n"]}